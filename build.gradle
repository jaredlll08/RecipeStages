buildscript {
    repositories {
        maven { url = 'https://maven.blamejared.com' }
        maven { url = 'https://files.minecraftforge.net/maven' }
        maven { url "https://plugins.gradle.org/m2/" }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
        classpath "gradle.plugin.com.matthewprenger:CurseGradle:1.4.0"
        classpath group: 'com.blamejared', name: 'ModTemplate', version: '1.+', changing: true
    }
}
apply plugin: 'com.blamejared.modtemplate'
apply plugin: "com.matthewprenger.cursegradle"
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'maven-publish'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

version = '2.0.0'
group = "com.blamejared.recipestages"
archivesBaseName = "RecipeStages"

minecraft {
    mappings channel: 'official', version: '1.16.5'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')

            mods {
                recipestages {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            mods {
                recipestages {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            args '--mod', 'recipestages', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                recipestages {
                    source sourceSets.main
                }
            }
        }
    }
}

modTemplate {
    mcVersion "1.16.5"
    curseHomepage "https://www.curseforge.com/minecraft/mc-mods/recipe-stages"
    displayName "RecipeStages"

    changelog {
        enabled true
        firstCommit "54fc92db82bd6ca67076ec9b57bc518d86daed53"
        repo "https://github.com/jaredlll08/RecipeStages"
    }
    versionTracker {
        enabled true
        projectName "RecipeStages"
        author "Jared"
    }
    webhook {
        enabled true
        curseId "280554"
        avatarUrl "https://media.forgecdn.net/avatars/128/69/636444415480522123.png"
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://maven.blamejared.com'
    }
    maven {
        url "https://dvs1.progwml6.com/files/maven"
    }
    maven {
        url 'https://maven.mcmoddev.com/'
    }
    maven {
        url 'https://repo.refinedmods.com/'
    }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.16.5-36.2.2'

    compile fg.deobf("com.blamejared.crafttweaker:CraftTweaker-1.16.5:7.1.2.404")

    compile fg.deobf("net.darkhax.gamestages:GameStages-Forge-1.16.5:7.3.10")
    compile fg.deobf("net.darkhax.bookshelf:Bookshelf-Forge-1.16.5:10.2.27")
    compile fg.deobf("mezz.jei:jei-1.16.4:7.6.1.65")
    compile fg.deobf("com.refinedmods:refinedstorage:1.9.12+151")

    compile fg.deobf("slimeknights.mantle:Mantle:1.16.5-1.6.116")
    compile fg.deobf("slimeknights.tconstruct:TConstruct:1.16.5-3.1.1.252")
}

jar {
    manifest {
        attributes([
                "Specification-Title"     : "recipestages",
                "Specification-Vendor"    : "BlameJared",
                "Specification-Version"   : "1",
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : "${version}",
                "Implementation-Vendor"   : "BlameJared",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}
jar.finalizedBy('reobfJar')

task sourcesJar(type: Jar, dependsOn: classes) {
    description = 'Creates a JAR containing the source code.'
    from sourceSets.main.allSource
    classifier = 'sources'
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    description = 'Creates a JAR containing the JavaDocs.'
    from javadoc.destinationDir
    classifier = 'javadoc'
}

task deobfJar(type: Jar) {
    description = 'Creates a JAR containing the non-obfuscated compiled code.'
    from sourceSets.main.output
    classifier = "deobf"
}
artifacts {
    archives sourcesJar
    archives javadocJar
    archives deobfJar
}

publish.dependsOn(project.tasks.getByName("assemble"))
publish.mustRunAfter(project.tasks.getByName("build"))

publishing {

    publications {

        mavenJava(MavenPublication) {

            groupId project.group
            artifactId project.archivesBaseName
            version project.version
            from components.java

            // Allows the maven pom file to be modified.
            pom.withXml {

                // Go through all the dependencies.
                asNode().dependencies.dependency.each { dep ->

                    println 'Surpressing artifact ' + dep.artifactId.last().value().last() + ' from maven dependencies.'
                    assert dep.parent().remove(dep)
                }
            }

            artifact sourcesJar {

                classifier 'sources'
            }
            artifact javadocJar {

                classifier 'javadoc'
            }
            artifact deobfJar {

                classifier 'deobf'
            }
        }
    }

    repositories {

        maven {

            url "file://" + System.getenv("local_maven")
        }
    }
}

curseforge {

    apiKey = findProperty('curseforge_api_token') ?: 0
    project {
        id = "280554"
        releaseType = 'release'
        changelog = file("changelog.md")
        changelogType = 'markdown'
        mainArtifact(jar) {
            relations {
                optionalDependency "crafttweaker"
                requiredDependency "game-stages"
            }
        }
        addArtifact(deobfJar)
    }
}
